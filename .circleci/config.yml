version: 2

defaults: &defaults
  working_directory: /go/src/boscoin.io/sebak
  docker:
    - image: circleci/golang:1.10

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: install dep
          command: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - restore_cache:
          key: dependency-cache-{{ checksum "Gopkg.lock" }}
      - run:
          name: install dependencies
          command: dep ensure
      - save_cache:
          key: dependency-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
      - persist_to_workspace:
          root: /
          paths:
            - go/src/boscoin.io/sebak
            - home/circleci/.ssh

  fmt:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /
      - run:
          name: check formatting
          command: if [[ -n "$(gofmt -l cmd lib)" ]]; then gofmt -l cmd lib; exit 1; fi

  test_go1_10:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /
      - run:
          name: run tests
          command: SEBAK_LOG_HANDLER=null GOCACHE=off go test -v -timeout 3m ./...

  test_go1_9:
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/boscoin.io/sebak
    steps:
      - attach_workspace:
          at: /
      - run:
          name: run tests
          command: SEBAK_LOG_HANDLER=null GOCACHE=off go test -v -timeout 3m ./...

  test_merged:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /
      - run:
          name: Checkout merge commit
          command: |
            if [[ -n "${CIRCLE_PR_NUMBER}" ]]
            then
              FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/merge:pr/${CIRCLE_PR_NUMBER}/merge"
              git fetch -u origin ${FETCH_REFS}
              git checkout "pr/${CIRCLE_PR_NUMBER}/merge"
            fi
      - run:
          name: run tests
          command: |
            mkdir -p /tmp/workspace/test_coverage
            for pkg in $(go list ./...); do
              name=$(basename "$pkg")
              SEBAK_LOG_HANDLER=null GOCACHE=off go test -v -timeout 3m -coverprofile=/tmp/workspace/test_coverage/$name.txt -covermode=atomic "$pkg"
            done
      - run: ls -al /tmp/workspace/test_coverage/
      - persist_to_workspace:
          root: /tmp/workspace/
          paths:
            - "test_coverage/*"

  upload_coverage:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: gather coverage files
          command: |
            set -ex
            echo "mode: atomic" > coverage.txt
            for name in $(ls ./test_coverage/); do
              tail -n +2 ./test_coverage/$name >> coverage.txt
            done
      - run:
          name: upload
          command: bash <(curl -s https://codecov.io/bash) -f coverage.txt

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - fmt:
          requires:
            - build
      - test_go1_10:
          requires:
            - fmt
      - test_go1_9:
          requires:
            - fmt
      - test_merged:
          requires:
            - test_go1_10
            - test_go1_9
      - upload_coverage:
          requires:
            - test_merged
