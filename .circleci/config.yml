version: 2

defaults: &defaults
  working_directory: /home/circleci/sebak
  docker:
    - image: circleci/golang:1.11

workspace: &workspace
  attach_workspace:
    at: /

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-mod-{{ checksum "go.sum" }}
      - run:
          name: Download dependencies
          command: go mod download
      - run:
          name: Run go vet
          command: go vet ./...
      - save_cache:
          key: dependency-cache-mod-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod/
      - persist_to_workspace:
          root: /
          paths:
            - home/circleci/sebak
            - home/circleci/.ssh
            - go/pkg/mod/

  fmt:
    <<: *defaults
    steps:
      - <<: *workspace
      - run:
          name: check formatting
          command: if [[ -n "$(gofmt -l cmd lib)" ]]; then gofmt -l cmd lib; exit 1; fi

  test_go1_11:
    docker:
      - image: circleci/golang:1.11
    working_directory: /home/circleci/sebak
    steps:
      - <<: *workspace
      - run:
          name: run tests
          command: SEBAK_LOG_HANDLER=null go test -v -timeout 8m ./...

  generate_merged_tree:
    <<: *defaults
    steps:
      - <<: *workspace
      - run:
          name: Checkout merge commit
          command: |
            set -ex
            if [[ -n "${CIRCLE_PR_NUMBER}" ]]
            then
              FETCH_REFS="${FETCH_REFS} +refs/pull/${CIRCLE_PR_NUMBER}/merge:pr/${CIRCLE_PR_NUMBER}/merge"
              git fetch -u origin ${FETCH_REFS}
              git checkout "pr/${CIRCLE_PR_NUMBER}/merge"
            fi
      - persist_to_workspace:
          root: /
          paths:
            - home/circleci/sebak

  unittests:
    <<: *defaults
    steps:
      - <<: *workspace
      - run:
          name: run tests
          command: |
            for pkg in $(go list ./... | grep -v vendor); do
                SEBAK_LOG_HANDLER=null go test -race -v -timeout 8m -coverprofile=profile.out "$pkg"
                if [ -f profile.out ]; then
                    cat profile.out >> coverage.txt
                    rm profile.out
                fi
            done
      - run:
          name: upload coverage reports
          command: bash <(curl -s https://codecov.io/bash) -F unittests

  integration_tests_node:
    <<: *defaults
    steps:
      - setup_remote_docker
      - <<: *workspace
      - run:
          name: integration tests node
          command: ./tests/node/run.sh
      - run:
          name: upload coverage reports
          command: bash <(curl -s https://codecov.io/bash) -F integration_tests_node

  integration_tests_sdk:
    <<: *defaults
    steps:
      - setup_remote_docker
      - <<: *workspace
      - run:
          name: integration tests sdk
          command: ./tests/sdk/run.sh
      - run:
          name: upload coverage reports
          command: bash <(curl -s https://codecov.io/bash) -F integration_tests_sdk

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - fmt:
          requires:
            - build
      - test_go1_11:
          requires:
            - fmt
      - generate_merged_tree:
          requires:
            - fmt
      - unittests:
          requires:
            - generate_merged_tree
      - integration_tests_node:
          requires:
            - generate_merged_tree
      - integration_tests_sdk:
          requires:
            - generate_merged_tree
